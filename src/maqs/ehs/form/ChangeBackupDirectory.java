package maqs.ehs.form;

import maqs.ehs.util.AppProperties;

import javax.swing.*;
import java.awt.event.*;
import java.awt.*;
import java.io.File;

import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.GridConstraints;

public class ChangeBackupDirectory extends JDialog {
    private JPanel contentPane;
    private JFileChooser fileSelector;

    public ChangeBackupDirectory() {

        setTitle( "Change Backup Directory");

        try {
            UIManager.setLookAndFeel(
                    UIManager.getSystemLookAndFeelClassName() );
        } catch ( Exception e ) {
        }

        setContentPane( contentPane );
        setModal( true );

// call onCancel() when cross is clicked
        setDefaultCloseOperation( DO_NOTHING_ON_CLOSE );
        addWindowListener( new WindowAdapter() {
            public void windowClosing( WindowEvent e ) {
                onCancel();
            }
        } );

// call onCancel() on ESCAPE
        contentPane.registerKeyboardAction( new ActionListener() {
            public void actionPerformed( ActionEvent e ) {
                onCancel();
            }
        }, KeyStroke.getKeyStroke( KeyEvent.VK_ESCAPE, 0 ), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT );


        File backupDir = new File( AppProperties.getBackupDirPath() );
        if ( backupDir.exists() ) {
            fileSelector.setCurrentDirectory( backupDir );
        }
        fileSelector.setFileSelectionMode( JFileChooser.DIRECTORIES_ONLY );

        fileSelector.addActionListener( new ActionListener() {
            public void actionPerformed( ActionEvent e ) {

                if ( JFileChooser.APPROVE_SELECTION.equals( e.getActionCommand() ) ) {
                    File selectedFile = fileSelector.getSelectedFile();
                    AppProperties.setBackupDirPath( selectedFile.getAbsolutePath() );
                    dispose();
                }

                if ( JFileChooser.CANCEL_SELECTION.equals( e.getActionCommand() ) ) {
                    dispose();
                }
            }
        } );

    }
    private void onCancel() {
// add your code here if necessary
        dispose();
    }

    public static void main( String[] args ) {
//        create();
//        System.exit( 0 );
    }

    public static void createInstance() {
//        ChangeBackupDirectory dialog = new ChangeBackupDirectory();
//        dialog.pack();
//        dialog.setVisible( true );
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout( new GridLayoutManager( 1, 1, new Insets( 10, 10, 10, 10 ), -1, -1 ) );
        final JPanel panel1 = new JPanel();
        panel1.setLayout( new GridLayoutManager( 1, 1, new Insets( 0, 0, 0, 0 ), -1, -1 ) );
        contentPane.add( panel1, new GridConstraints( 0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false ) );
        fileSelector = new JFileChooser();
        fileSelector.setDialogTitle( "Change Backup Directory" );
        panel1.add( fileSelector, new GridConstraints( 0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false ) );
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }
}
